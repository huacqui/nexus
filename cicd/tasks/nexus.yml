---
- name: Nexus | Install dependency
  package:
    name: "{{ item.package }}"
    state: "{{ item.state }}"
  loop: "{{ nexus_package }}"

- name: Nexus | Add a System user that runs the Nexus process
  user:
    name: "{{ nexus_system_user }}"
    system: yes
    create_home: no
    shell: /usr/sbin/nologin
    comment: "Nexus user service"
    expires: -1

- name: Nexus | Copy the zip file to the remote server and unzip it
  unarchive:
    src: "{{ pkg_location | default('files') }}"
    dest: "{{ install_location }}"
    owner: "{{ nexus_system_user }}"
    remote_src: yes
    group: "{{ nexus_system_user }}"
  environment: "{{ proxy_env }}"

- name: Nexus | Change file ownership, group and permissions
  file:
    path: "{{ item }}"
    owner: "{{ nexus_system_user }}"
    group: "{{ nexus_system_user }}"
    state: directory
    recurse: yes
  loop:
    - "{{ nexus_home_directory }}"
    - "{{ nexus_sonatype_directory }}"

- name: Nexus | Create nexus service
  template:
    src: "templates/{{ nexus_service_template }}.j2"
    dest: "/etc/systemd/system/{{ nexus_service_template }}"

- name: Nexus | Configure firewall
  firewalld:
    port: "{{ item.port }}"
    permanent: yes
    immediate: yes
    state: "{{ item.state }}"
  loop: "{{ nexus_firewall_ports }}"

- name: Nexus | reload systemd
  systemd:
    daemon_reload: yes

- name: Nexus | Restart firewall
  systemd:
    name: firewalld
    state: restarted

- name: Nexus | Set selinux
  selinux:
    policy: targeted
    state: permissive

- name: Nexus | Configure nexus ip
  ini_file:
    path: "{{ nexus_home_directory }}/etc/nexus-default.properties"
    option: application-host
    value: 127.0.0.1
    no_extra_spaces: yes
    state: present
    section: null

- name: Nexus | Config JVM per Memory size
  lineinfile:
    path: "{{ item.path }}"
    line: "{{ item.line }}"
  loop: "{{ nexus_tuning_jvm }}"

- name: Nexus | Start service
  systemd:
    name: "{{ service_name }}"
    state: started
    enabled: yes
- name: Nexus | wait started nexus services
  wait_for:
    path: "{{ install_location }}/sonatype-work/nexus3/log/nexus.log"
    search_regex: Started

- name: Nexus | Read admin password default
  slurp:
    src: "{{ install_location }}/sonatype-work/nexus3/admin.password"
  register: adminpass

- name: Nexus | Print admin pass
  debug:
     msg: "{{ adminpass['content'] | b64decode }}"

- name: Nexus | Change pass admin
  uri:
    url: http://127.0.0.1:8081/service/rest/v1/security/users/admin/change-password
    method: PUT
    user: admin
    password: "{{ adminpass['content'] | b64decode }}"
    force_basic_auth: yes
    status_code: 204
    body_format: form-urlencoded
    headers:
      Content-Type: text/plain
      accept: application/json
    body: "{{ admin_pass }}"
